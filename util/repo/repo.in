#####################################################################
#VARIABLES
#####################################################################
REPO=$(shell basename $(PWD))
REPODIR=$(UTIL)/repo/
BRANCH=$(shell bash $(UTIL)/repo/getbranch.sh)

#####################################################################
#GIT RULES
#####################################################################
branch:
	@echo "We are in branch '$(BRANCH)'"

commit:
	@echo "Commiting..."
	@-git commit -am "Commit"
	@-git push origin $(BRANCH)

status:
	@echo "Git Status..."
	@-git status

pull:
	@echo "Pulling new files..."
	@-git reset --hard HEAD
	@-git pull origin $(BRANCH)

pullall:
	@echo "Pulling new files..."
	@-git reset --hard HEAD
	@-git pull --all

repo_install:unpack

#####################################################################
#REPO RULES
#####################################################################
cleanrepo:
	@echo "Cleaning repo files..."
	@-find $(REPODIR) -name "*.zip" -type f -delete
	@-find $(REPODIR) -name "*.log" -delete

repoinit:
	@echo "Initializing repository..."
	@-git update-index --assume-unchanged ".sonarc" 
	@-git update-index --assume-unchanged ".reporc" 

repo:
	@echo "Creating a new repo..."	

	@echo "Removing all git information..."
	@rm -rf .git

	@echo "Creating GitHub repository $(USER)/$(REPO) (if this is not the right user ctrl+c and run: USER=<user> make repo)"
	@curl -o /dev/null -s -u '$(USER)' https://api.github.com/user/repos -d '{"name":"$(REPO)"}'

	@echo "Initializing repo..."
	@git init
	@git add -A
	@echo "remote add origin $(GITMETH)-$(USER)$(GITCHAR)$(USER)/$(REPO).git"
	@git remote add origin $(GITMETH)-$(USER)$(GITCHAR)$(USER)/$(REPO).git
	@git commit -am "New Repo"
	@echo "Pushing files..."
	@git push origin master

	@echo "#Automatically generate by make repo:" >> .reporc
	@echo "REPO=$(REPO)" >> .reporc
	@echo "USER=$(USER)" >> .reporc

	@chmod +x $(UTIL)/sonar/tools/*
	@make repoinit

deps:
	@echo "Checking for dependencies..."
	@bash $(REPODIR)/deps.sh

pack:
	@echo "Packing data..."
	@bash $(REPODIR)/pack.sh

unpack:
	@echo "Unpacking data..."
	@bash $(REPODIR)/pack.sh unpack


files:clean
	@echo "Generating list of files..."
	@bash $(REPODIR)/files.sh 

updatefiles:
	@echo "Getting list of files..."
	@curl -s -o $(REPODIR)/repofiles.list https://raw.githubusercontent.com/$(GITREPO)/$(BRANCH)/$(REPODIR)/repofiles.list

update:updatefiles
	@echo "Updating files $(UPDATEFILES)..."
	@bash $(REPODIR)/update.sh $(UPDATEFILES)

#####################################################################
#WEB TOOLS
#####################################################################
HTTPCMD=$(PYTHON) -m $(HTTPSERVER) 9000
JUPYCMD=jupyter-notebook --no-browser --port=8888

PID=$(shell ps -eaf |grep '$(HTTPCMD)' |grep -v grep |cut -f 2 -d' ')
JPID=$(shell ps -eaf |grep '$(JUPYCMD)' |grep -v grep |cut -f 2 -d' ')

showhtml:
	@echo "Web processes:"
	@echo "Simple http server:"
	@-ps -eaf |grep '$(HTTPCMD)' |grep -v grep
	@echo "To kill it: make killhtml"
	@echo "Jupyter server:"
	@-jupyter notebook list
	@echo "To kill it: make killjupyter"

killhtml:
	@echo "Killing html process..."
	@kill -9 $(PID)

html:killhtml
	@echo "Launching http server..."
	@nohup $(HTTPCMD) > $(UTIL)/repo/http.log &
	@sleep 1
	@echo "See http://localhost:9000"

killjupyter:
	@echo "Killing jupyter instances..."
	@kill -9 $(JPID)

jupyter:killjupyter
	@echo "Launching Jupyter..."
	@nohup $(JUPYCMD) > $(UTIL)/repo/jupyter.log &
	@sleep 1
	@make listjupyter

#####################################################################
#ONLY FOR REPO TEMPLATE DEVELOPER
#####################################################################
pushreporc:
	@echo "Updating .reporc..."
	@-git update-index --no-assume-unchanged ".reporc" 
	@-make commit
	@-git update-index --assume-unchanged ".reporc" 

edit:files
	@emacs -nw .reporc .sonarc $(shell cat $(REPODIR)/files.list)

